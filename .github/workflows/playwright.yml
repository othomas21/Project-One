name: Playwright Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        # Test on multiple Node versions
        node-version: [18, 20]
        # Test different browser configurations
        shard: [1/3, 2/3, 3/3]
    
    steps:
      - uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        
      - name: Setup test environment variables
        run: |
          cp .env.example .env.local
          echo "NEXT_PUBLIC_APP_URL=http://localhost:3000" >> .env.local
          echo "NODE_ENV=test" >> .env.local
        
      - name: Build application
        run: npm run build
        
      - name: Run Playwright tests
        run: npx playwright test --shard=${{ matrix.shard }}
        env:
          PLAYWRIGHT_WORKERS: 1
          
      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report-${{ matrix.node-version }}-${{ strategy.job-index }}
          path: playwright-report/
          retention-days: 30
          
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.node-version }}-${{ strategy.job-index }}
          path: test-results/
          retention-days: 30

  accessibility-tests:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        
      - name: Setup test environment
        run: |
          cp .env.example .env.local
          echo "NEXT_PUBLIC_APP_URL=http://localhost:3000" >> .env.local
          
      - name: Build application
        run: npm run build
        
      - name: Run Accessibility Tests
        run: npx playwright test --grep "accessibility|a11y" --reporter=json
        env:
          PLAYWRIGHT_WORKERS: 1
          
      - name: Upload Accessibility Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-report
          path: playwright-report/
          retention-days: 30

  mobile-tests:
    timeout-minutes: 45
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        
      - name: Setup test environment
        run: |
          cp .env.example .env.local
          echo "NEXT_PUBLIC_APP_URL=http://localhost:3000" >> .env.local
          
      - name: Build application
        run: npm run build
        
      - name: Run Mobile Tests
        run: npx playwright test --project="Mobile Chrome" --project="Mobile Safari"
        env:
          PLAYWRIGHT_WORKERS: 1
          
      - name: Upload Mobile Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mobile-test-results
          path: test-results/
          retention-days: 30

  test-report:
    if: always()
    runs-on: ubuntu-latest
    needs: [test, accessibility-tests, mobile-tests]
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Merge Test Reports
        run: |
          echo "# Playwright Test Results" > test-summary.md
          echo "" >> test-summary.md
          echo "## Test Status" >> test-summary.md
          echo "- Main Tests: ${{ needs.test.result }}" >> test-summary.md
          echo "- Accessibility Tests: ${{ needs.accessibility-tests.result }}" >> test-summary.md
          echo "- Mobile Tests: ${{ needs.mobile-tests.result }}" >> test-summary.md
          
      - name: Upload Combined Report
        uses: actions/upload-artifact@v4
        with:
          name: combined-test-report
          path: test-summary.md
          retention-days: 30
